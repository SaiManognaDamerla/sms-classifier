import random
import string

def generate_password(length=12, uppercase=True, lowercase=True, numbers=True, special_chars=True):
    characters = ""
    if uppercase:
        characters += string.ascii_uppercase
    if lowercase:
        characters += string.ascii_lowercase
    if numbers:
        characters += string.digits
    if special_chars:
        characters += string.punctuation

    if not characters:
        print("Error: At least one character set should be selected.")
        return None

    password = ''.join(random.choice(characters) for _ in range(length))
    return password

def generate_multiple_passwords(num_passwords, length=12, uppercase=True, lowercase=True, numbers=True, special_chars=True):
    passwords = []
    for _ in range(num_passwords):
        password = generate_password(length, uppercase, lowercase, numbers, special_chars)
        passwords.append(password)
    return passwords

if __name__ == "__main__":
    try:
        num_passwords = int(input("Enter the number of passwords to generate: "))
        password_length = int(input("Enter the length of each password: "))
        include_uppercase = input("Include uppercase letters? (y/n): ").lower() == 'y'
        include_lowercase = input("Include lowercase letters? (y/n): ").lower() == 'y'
        include_numbers = input("Include numbers? (y/n): ").lower() == 'y'
        include_special_chars = input("Include special characters? (y/n): ").lower() == 'y'

        passwords = generate_multiple_passwords(
            num_passwords,
            password_length,
            include_uppercase,
            include_lowercase,
            include_numbers,
            include_special_chars
        )

        print("\nGenerated Passwords:")
        for i, password in enumerate(passwords, start=1):
            print(f"{i}. {password}")

    except ValueError:
        print("Error: Please enter valid numeric values for number of passwords and password length.")
